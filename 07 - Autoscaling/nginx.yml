apiVersion: v1
kind: Service
metadata:
  name: nginx-internal-service
spec:
  ports:
    - port: 80
  selector:
    app: nginx
  clusterIP: None
---

apiVersion: v1
kind: Service
metadata:
  name: nginx-load-balancer-service
spec:
  type: LoadBalancer
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  selector:
    app: nginx
---

apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: nginx:stable
          name: nginx
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: nginx
          livenessProbe:
            httpGet:
              port: 80
              path: /index.html
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              port: 80
              path: /index.html
            periodSeconds: 2
            timeoutSeconds: 3
          startupProbe:
            httpGet:
              port: 80
              path: /index.html
            failureThreshold: 30
            periodSeconds: 5
          resources:
            limits:
              cpu: "60m" # 0.060 cpu
              memory: "30Mi" # 30 Megabytes
            requests:
              cpu: "25m" # 0.025 cpu
              memory: "15Mi" # 15 Megabytes
---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-deployment
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 35
